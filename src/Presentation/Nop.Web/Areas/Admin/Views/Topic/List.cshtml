@model TopicSearchModel

@{
    //page title
    ViewBag.PageTitle = T("Admin.ContentManagement.Topics").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Topics");
}

@{
    const string hideSearchBlockAttributeName = "TopicsPage.HideSearchBlock";
    var hideSearchBlock = genericAttributeService.GetAttribute<bool>(workContext.CurrentCustomer, hideSearchBlockAttributeName);
}

<div class="content-header clearfix">
    <h1 class="pull-left">
        @T("Admin.ContentManagement.Topics")
    </h1>
    <div class="pull-right">
        <a asp-action="Create" class="btn bg-blue">
            <i class="fa fa-plus-square"></i>
            @T("Admin.Common.AddNew")
        </a>
        <button type="button" id="delete-selected" class="btn bg-red">
            <i class="fa fa-trash-o"></i>
            @T("Admin.Common.Delete.Selected")
        </button>
        <nop-action-confirmation asp-button-id="delete-selected" />
        @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.TopicListButtons })
    </div>
</div>

<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default panel-search">
                <div class="panel-body">
                    <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                        <div class="search-text">@T("Admin.Common.Search")</div>
                        <div class="icon-search"><i class="fa fa-search" aria-hidden="true"></i></div>
                        <div class="icon-collapse"><i class="fa fa-angle-down" aria-hidden="true"></i></div>
                    </div>

                    <div class="search-body @(hideSearchBlock ? "closed" : "")">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group" @(Model.HideStoresList ? Html.Raw("style=\"display:none\"") : null)>
                                    <div class="col-md-4">
                                        <nop-label asp-for="SearchStoreId" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-select asp-for="SearchStoreId" asp-items="Model.AvailableStores" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="SearchKeywords" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-editor asp-for="SearchKeywords" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-8 col-md-offset-4">
                                        <button type="button" id="search-topics" class="btn btn-primary btn-search">
                                            <i class="fa fa-search"></i>
                                            @T("Admin.Common.Search")
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel panel-default">
                <div class="panel-body">
                    @await Html.PartialAsync("Table", new DataTablesModel
                    {
                        Name = "topics-grid",
                        UrlRead = new DataUrl("List", "Topic", null),
                        SearchButtonId = "search-topics",
                        Length = Model.PageSize,
                        LengthMenu = Model.AvailablePageSizes,
                        Filters = new List<FilterParameter>
                        {
                            new FilterParameter(nameof(Model.SearchKeywords)),
                            new FilterParameter(nameof(Model.SearchStoreId))
                        },
                        ColumnCollection = new List<ColumnProperty>
                        {
                            new ColumnProperty(nameof(TopicModel.Id))
                            {
                                IsMasterCheckBox = true,
                                Render = new RenderCheckBox("checkbox_topics"),
                                ClassName =  NopColumnClassDefaults.CenterAll,
                                Width = "50",
                            },
                            new ColumnProperty(nameof(TopicModel.TopicName))
                            {
                                Title = T("Admin.ContentManagement.Topics.Fields.TopicName").Text
                            },
                            new ColumnProperty(nameof(TopicModel.Published))
                            {
                                Title = T("Admin.ContentManagement.Topics.Fields.Published").Text,
                                Width = "150",
                                ClassName = NopColumnClassDefaults.CenterAll,
                                Render = new RenderBoolean()
                            },
                            new ColumnProperty(nameof(TopicModel.IsPasswordProtected))
                            {
                                Title = T("Admin.ContentManagement.Topics.Fields.IsPasswordProtected").Text,
                                Width = "150",
                                ClassName = NopColumnClassDefaults.CenterAll,
                                Render = new RenderBoolean()
                            },
                            new ColumnProperty(nameof(TopicModel.IncludeInSitemap))
                            {
                                Title = T("Admin.ContentManagement.Topics.Fields.IncludeInSitemap").Text,
                                Width = "150",
                                ClassName = NopColumnClassDefaults.CenterAll,
                                Render = new RenderBoolean()
                            },
                            new ColumnProperty(nameof(TopicModel.IncludeInTopMenu))
                            {
                                Title = T("Admin.ContentManagement.Topics.Fields.IncludeInTopMenu").Text,
                                Width = "150",
                                ClassName = NopColumnClassDefaults.CenterAll,
                                Render = new RenderBoolean()
                            },
                            new ColumnProperty(nameof(TopicModel.IncludeInFooterColumn1))
                            {
                                Title = T("Admin.ContentManagement.Topics.Fields.IncludeInFooterColumn1").Text,
                                Width = "150",
                                ClassName = NopColumnClassDefaults.CenterAll,
                                Render = new RenderBoolean()
                            },
                            new ColumnProperty(nameof(TopicModel.IncludeInFooterColumn2))
                            {
                                Title = T("Admin.ContentManagement.Topics.Fields.IncludeInFooterColumn2").Text,
                                Width = "150",
                                ClassName = NopColumnClassDefaults.CenterAll,
                                Render = new RenderBoolean()
                            },
                            new ColumnProperty(nameof(TopicModel.IncludeInFooterColumn3))
                            {
                                Title = T("Admin.ContentManagement.Topics.Fields.IncludeInFooterColumn3").Text,
                                Width = "150",
                                ClassName = NopColumnClassDefaults.CenterAll,
                                Render = new RenderBoolean()
                            },
                            new ColumnProperty(nameof(TopicModel.DisplayOrder))
                            {
                                Title = T("Admin.ContentManagement.Topics.Fields.DisplayOrder").Text,
                                Width = "100",
                                ClassName = NopColumnClassDefaults.CenterAll
                            },
                            new ColumnProperty(nameof(TopicModel.Id))
                            {
                                Title = T("Admin.Common.Edit").Text,
                                Width = "100",
                                ClassName = NopColumnClassDefaults.Button,
                                Render = new RenderButtonEdit(new DataUrl("Edit"))
                            }
                        }
                    })
                    <script>
                        $('#delete-selected-action-confirmation-submit-button').bind('click', function () {
                            var postData = {
                                selectedIds: selectedIds
                            };
                            addAntiForgeryToken(postData);
                            $.ajax({
                                cache: false,
                                type: "POST",
                                url: "@(Url.Action("DeleteSelected", "Topic"))",
                                data: postData,
                                error: function (jqXHR, textStatus, errorThrown) {
                                    $('#deleteSelectedFailed-info').text(errorThrown);
                                    $('#deleteSelectedFailed').click();
                                        },
                                complete: function (jqXHR, textStatus) {
                                    updateTable('#topics-grid');
                                }
                            });
                            $('#delete-selected-action-confirmation').modal('toggle');
                            return false;
                        });
                    </script>
                    <nop-alert asp-alert-id="deleteSelectedFailed" />
                </div>
            </div>
        </div>
    </div>
</div>